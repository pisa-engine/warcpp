sudo: require
language: cpp

branches:
  only:
    - master

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-xenial-6.0

matrix:
  fast_finish: true
  include:
    - os: linux
      dist: xenial
      compiler: gcc
      addons: &gcc7
        apt:
          sources: *all_sources
          packages:
            - g++-7
            - lcov
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && COVERAGE=On"
    - os: linux
      dist: xenial
      compiler: gcc
      addons: &gcc7
        apt:
          sources: *all_sources
          packages: ['g++-7']
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && PISA_COMPILE_HEADERS=On"
    - os: linux
      dist: xenial
      compiler: gcc
      addons: &gcc8
        apt:
          sources: *all_sources
          packages: ['g++-8']
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && COVERAGE=Off"
    - os: linux
      dist: xenial
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages: ['clang-5.0', 'libstdc++-7-dev']
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0 && COVERAGE=Off"
    - os: linux
      dist: xenial
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages: ['clang-6.0', 'libstdc++-8-dev']
      env: MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0 && COVERAGE=Off"
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      env: MATRIX_EVAL="CC=clang && CXX=clang++ && COVERAGE=Off"

before_install:
  - eval "${MATRIX_EVAL}"

script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make
    - ctest
